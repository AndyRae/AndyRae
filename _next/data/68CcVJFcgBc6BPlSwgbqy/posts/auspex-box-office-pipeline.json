{"pageProps":{"postData":{"id":"auspex-box-office-pipeline","contentHtml":"<p>Auspex is a simple example of building a data pipeline starting from extracting data from PDFs, right down to feature engineering. It's built with Python, and uses a few external APIs for ease.</p>\n<p>The process is linear, and starts by extracting data from daily PDF reports from Vista box office (using Tabula), and then adds further film details using the <a href=\"http://www.omdbapi.com\">OMDB API</a>.</p>\n<p>Additionally it retrieves trailer links for each film through the Youtube API - then downloads those trailers, uploads them to Google Cloud Storage, and runs them through the Google Vision API. Collecting trailer annotations, which is a text description for every frame. This was inspired by <a href=\"https://cloud.google.com/blog/products/ai-machine-learning/how-20th-century-fox-uses-ml-to-predict-a-movie-audience\">this piece</a> on predicting box office using these annotations from Google and 20th Century Fox.</p>\n<p>This process is also set up for the <a href=\"https://boxoffice.rae.li\">UK Box Office dashboard</a> database, and additionally for upcoming releases.</p>\n<p>I have some exploratory data analysis to share using this pipeline, as well as the machine learning model to predict upcoming releases. Given the <a href=\"https://www.theguardian.com/film/2020/mar/24/us-box-office-zero-revenue-first-time-ever-coronavirus-the-invisible-man\">current collapse</a> in box office data, this doesn't feel like a priority, as future real world test data is now probably months away.</p>\n<p>The source code is available on <a href=\"https://github.com/AndyRae/auspex\">GitHub</a>.</p>\n","title":"Auspex - Box Office Data Pipeline for Machine Learning","date":"2020-03-31","image":null,"tag":"projects","permalink":"auspex-box-office-pipeline"}},"__N_SSG":true}